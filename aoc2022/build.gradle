/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.9.1')
        }
    }
}

application {
    mainModule = 'io.github.zebalu.aoc2022'
    mainClass = 'io.github.zebalu.aoc2022.main.AdventOfCode2022'
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
        //vendor = JvmVendorSpec.GRAAL_VM
    }
}

tasks.named('jar') {
    manifest {
        attributes('Main-Class': 'io.github.zebalu.aoc2022.main.AdventOfCode2022')
    }
}

tasks.register('runDiagnostics', JavaExec) {
    group = "Execution"
    description = "Run the main class with FlightRecorder"
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs=['-XX:+FlightRecorder', '-XX:StartFlightRecording=duration=120s,dumponexit=true,filename=diagnostics.jfr']
    mainClass = application.mainClass
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(19)
    }
}
